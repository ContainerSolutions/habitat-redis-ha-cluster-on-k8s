add_label_to_self_pod() {
  echo "Setting label $1=$2"
  k8s_label_op "{ \"op\": \"add\", \"path\": \"/metadata/labels/$1\", \"value\": \"$2\" }"
}

remove_label_from_self_pod() {
  echo "REMOVING LABEL $1"
  k8s_label_op "{ \"op\": \"delete\", \"path\": \"/metadata/labels/$1\" }"
}

k8s_label_op() {
  echo "APPLYING $1"
  stat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt 
  curl -v -v -v --cacert /var/run/secrets/kubernetes.io/serviceaccount/ca.crt -H "Authorization: Bearer $(cat /var/run/secrets/kubernetes.io/serviceaccount/token)" --request PATCH --data "$1" -H "Content-Type:application/json-patch+json" https://$KUBERNETES_SERVICE_HOST:$KUBERNETES_PORT_443_TCP_PORT/api/v1/namespaces/$POD_NAMESPACE/pods/$POD_NAME
}


# Initially, we have no clue wether or not we are a follower or a leader.
state="undecided"

# Wait until a member ID has been assigned.
hostname=$(hostname)

while true; do
  member_id=$(curl -s localhost:9631/census | jq -r ".censuses.\"redis.redis-cluster-test\".population | to_entries | map(select(.value.sys.hostname == \"$hostname\"))[0].value.member_id")
  am_i_a_leader=$(curl -s localhost:9631/census | jq -r ".censuses.\"redis.redis-cluster-test\".population.\"$member_id\".leader")
  echo "[$(date)] state: $state, member_id: $member_id,  leader_state: '$am_i_a_leader'"

  case "$am_i_a_leader" in
    true)
      if [[ "$state"  != "leader" ]]; then
        echo "I have become a leader"
        add_label_to_self_pod "role" "leader"
        state="leader"
      fi
    ;;
    false)
      if [[ "$state" != "follower" ]]; then
        echo "I have become a follower"
        add_label_to_self_pod "role" "follower"
        state="follower"
      fi
    ;;
    *)
      echo "Hmm. I'm not a leader, but a '$am_i_a_leader'"
    ;;
  esac
done

#  vim: set filetype=sh :
